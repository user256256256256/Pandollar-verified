@using DevExtreme.AspNet.Mvc
@using PANDOLLAR.Areas.CoreSystem.Models
@model AspNetUser

@{
    Layout = "_Layout";
    ViewData["Title"] = "Subscription Logs";
}

<div class="section my-3">
    <h2 class="section-title">TRIAL NOTIFICATAIONS</h2>
    <p class="section-lead">This page is just an example for you to create your own page.</p>
</div>

<!-- DevExtreme DataGrid for Feedbacks -->
<div class="card p-3" id="subscriptionLogsGrid">
    @(
        Html.DevExtreme().DataGrid<TrialNotification>()
        .ShowBorders(true)
        .ID("payments_list")
        .DataSource(d => d.Mvc().Controller("TrialNotificationsAPI").LoadAction("Get").Key("Id")
        .DeleteAction("Delete"))
        .ShowColumnLines(false)
        .ShowRowLines(true)
        .RowAlternationEnabled(true)
        .FilterRow(f => f.Visible(false))
        .HeaderFilter(f => f.Visible(true))
        .RemoteOperations(true)
        .ColumnHidingEnabled(true)
        .ColumnAutoWidth(true)
        .Selection(s => s.Mode(SelectionMode.Multiple))
        .SearchPanel(s => s.Visible(true).Width(250).Placeholder("Search..."))
        .FocusedRowEnabled(true)
        .Paging(p => p.PageSize(10))
        .RemoteOperations(true)
        .Summary(s => s.TotalItems(totalItems => { totalItems.AddFor(m => m.Id).SummaryType(SummaryType.Count); }))
        .Editing(e => e
        .AllowAdding(false)  // Disable adding new feedback
        .AllowUpdating(false)  // Allow editing feedback
        .AllowDeleting(true)  // Allow deleting feedback
        .UseIcons(true) // Use Icons
        .Mode(GridEditMode.Popup)
        .Popup(p => p
        .Title("Customer Payments")
        .Height(450)
        .ShowTitle(true)
        .Position(pos => pos
        .My(HorizontalAlignment.Center, VerticalAlignment.Center)
        .At(HorizontalAlignment.Center, VerticalAlignment.Center)
        .Of(new JS("window"))
        )
        )
        )
        .Sorting(s => s
        .Mode(GridSortingMode.Multiple)  // Allows sorting by multiple columns
        )
        .Columns(columns =>
        {
            columns.AddFor(m => m.Company.CompanyName).Caption("Company Name").AllowEditing(false);
            columns.AddFor(m => m.TrialStartDate).Caption("Start Date").AllowEditing(false);
            columns.AddFor(m => m.TrialEndDate).Caption("End Date").AllowEditing(false);
            columns.AddFor(m => m.IsNotified).Caption("Notified").AllowEditing(false);
            columns.AddFor(m => m.NotificationType.Type).Caption("Notification Type").AllowEditing(false);
            columns.AddFor(m => m.NotificationType.Message).Caption("Message").AllowEditing(false);
            columns.AddFor(m => m.ReminderDate).Caption("Last Reminded On").AllowEditing(false);
            columns.AddFor(m => m.SentAt).Caption("Sent On").AllowEditing(false);
            columns.AddFor(m => m.Company.CompanyEmail).Caption("Company Email").AllowEditing(false);
            columns.AddFor(m => m.Company.CompanyPhone).Caption("Company Phone").AllowEditing(false);

            // Manage Button Column (for Edit/Delete)
            columns.Add()
            .Type(GridCommandColumnType.Buttons)
            .Width(80)
            .Caption("Manage")
            .Name("ManageButton")
            .Buttons(b =>
            {
                b.Add().Name(GridColumnButtonName.Edit).Hint("Edit");
                b.Add().Name(GridColumnButtonName.Delete).Hint("Delete");
            });

        })
        .Paging(p => p.PageSize(10))
        .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.Company.CompanyName).SummaryType(SummaryType.Count);
        })
        )

        )
</div>